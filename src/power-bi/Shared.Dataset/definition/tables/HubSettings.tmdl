table HubSettings
	lineageTag: b391a865-7a16-491c-a9f4-8bc826285b97

	column StorageAccount
		dataType: string
		lineageTag: a419c4ca-d949-4420-a845-8976869a7232
		summarizeBy: none
		sourceColumn: StorageAccount

		annotation SummarizationSetBy = Automatic

	column Version
		dataType: string
		lineageTag: fdea84c2-5bb2-40f3-9e9c-0b3ca4f07667
		summarizeBy: none
		sourceColumn: Version

		annotation SummarizationSetBy = Automatic

	column ExportRetentionInDays
		dataType: double
		lineageTag: 4ad6b376-dba2-4fb8-a20e-629499590b64
		summarizeBy: sum
		sourceColumn: ExportRetentionInDays

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column IngestionRetentionInMonths
		dataType: double
		lineageTag: 858a4eeb-8a80-4d52-8dc5-9652b26aafd1
		summarizeBy: sum
		sourceColumn: IngestionRetentionInMonths

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column Scopes
		dataType: double
		lineageTag: 9f3dbdd6-79bd-4b18-94f9-abb2ce80904d
		summarizeBy: sum
		sourceColumn: Scopes

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition HubSettings = m
		mode: import
		queryGroup: 'FinOps toolkit'
		source =
				let
				    _config = #"Storage URL" & "/../config/",
				    ADLS = AzureStorage.DataLake(_config),
				    Settings = Json.Document(ADLS{[Name="settings.json"]}[Content], 1252),
				    ToTable = Table.FromRecords({Settings}),
				    Retention = if Table.HasColumns(ToTable, "retention") then Table.ExpandRecordColumn(ToTable, "retention", {"msexports", "ingestion"}, {"retention.msexports", "retention.ingestion"}) else ToTable,
				    ExportRetention = if Table.HasColumns(ToTable, "retention") then Table.ExpandRecordColumn(Retention, "retention.msexports", {"days"}, {"ExportRetentionInDays"}) else Table.AddColumn(Retention, "ExportRetentionInDays", each null),
				    IngestRetention = if Table.HasColumns(ToTable, "retention") then Table.ExpandRecordColumn(ExportRetention, "retention.ingestion", {"months"}, {"IngestionRetentionInMonths"}) else Table.AddColumn(ExportRetention, "IngestionRetentionInMonths", each null),
				    ScopeCount = Table.AddColumn(IngestRetention, "Scopes", each List.Count(List.RemoveMatchingItems([scopes], {"/foo", ""}))),
				    Storage = Table.AddColumn(ScopeCount, "StorageAccount", each Text.SplitAny(#"Storage URL", "/."){2}),
				    SelectColumns = Table.SelectColumns(Storage, {"StorageAccount", "version", "ExportRetentionInDays", "IngestionRetentionInMonths", "Scopes"}),
				    FixTypes = Table.TransformColumnTypes(SelectColumns, {{"version", type text}, {"ExportRetentionInDays", type number}, {"IngestionRetentionInMonths", type number}, {"Scopes", type number}}),
				    Version = Table.RenameColumns(FixTypes, {{"version", "Version"}})
				in
				    Version

	annotation PBI_ResultType = Table

