table HubExports
	lineageTag: 39263eb3-cff4-47dc-9c72-5e05986a2ab7

	measure ExportMonths = FORMAT(MIN([Month]), "Mmm yyyy") & IF(MIN([Month])=MAX([Month]), "", "-" & FORMAT(MAX([Month]), "Mmm yyyy"))
		lineageTag: 257b6903-84b6-43d1-b9b5-db670d662654

	measure ExportDayRange = FORMAT(MIN([DateModified]), "Mmm d") & IF(MIN([DateModified])=MAX([DateModified]), "", "-" & FORMAT(MAX([DateModified]), "Mmm d"))
		lineageTag: 1714665d-da85-432f-9874-11146769abe9

	column Scope
		dataType: string
		lineageTag: b7662ff2-a88b-42ca-b410-f85d6fe34e54
		summarizeBy: none
		sourceColumn: Scope

		annotation SummarizationSetBy = Automatic

	column ExportName
		dataType: string
		lineageTag: 351f1eab-1448-4c9e-be35-d7abc46fe99e
		summarizeBy: none
		sourceColumn: ExportName

		annotation SummarizationSetBy = Automatic

	column Dataset
		dataType: string
		lineageTag: 999b9a14-6187-4928-83ce-395ac15c4bc5
		summarizeBy: none
		sourceColumn: Dataset

		annotation SummarizationSetBy = Automatic

	column ApiVersion
		dataType: string
		lineageTag: 7d33f4cb-9951-45d3-b8ca-14c45e2408f2
		summarizeBy: none
		sourceColumn: ApiVersion

		annotation SummarizationSetBy = Automatic

	column StorageAccount
		dataType: string
		lineageTag: c2e9be3b-0c87-4db7-a3c2-ac555be4a2b5
		summarizeBy: none
		sourceColumn: StorageAccount

		annotation SummarizationSetBy = Automatic

	column Container
		dataType: string
		lineageTag: 3d3209b4-6af5-4906-b7b8-bfa6dcff16c8
		summarizeBy: none
		sourceColumn: Container

		annotation SummarizationSetBy = Automatic

	column Month
		dataType: dateTime
		formatString: Mmm yyyy
		lineageTag: 5a1b22f8-8efc-4bea-a5ee-bad7b3c716cf
		summarizeBy: none
		sourceColumn: Month

		variation Variation
			isDefault
			relationship: bfdf0d9e-7a2a-4449-b28b-e8d7193fc4d3
			defaultHierarchy: LocalDateTable_b4481e6d-7b57-4236-b430-b5260c37ff6f.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

		annotation PBI_FormatHint = {"isCustom":true}

	column FileType
		dataType: string
		lineageTag: 3806bc77-b786-4bc7-876d-6943bb3bbcf5
		summarizeBy: none
		sourceColumn: FileType

		annotation SummarizationSetBy = Automatic

	column FileName
		dataType: string
		lineageTag: a61a9ef6-ceef-4ddc-97e6-ab827fa50370
		summarizeBy: none
		sourceColumn: FileName

		annotation SummarizationSetBy = Automatic

	column FileSizeInGB
		dataType: double
		lineageTag: 0a054fb9-adc8-42fa-8330-6ec7511b29fe
		summarizeBy: sum
		sourceColumn: FileSizeInGB

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column FolderPath
		dataType: string
		lineageTag: cad4ce6f-2e66-4659-9956-18166bc3076c
		summarizeBy: none
		sourceColumn: FolderPath

		annotation SummarizationSetBy = Automatic

	column DateCreated
		dataType: dateTime
		formatString: General Date
		lineageTag: 327c5622-1fce-4caf-9ad3-99e82d791eec
		summarizeBy: none
		sourceColumn: DateCreated

		variation Variation
			isDefault
			relationship: 404e7529-fc66-442f-8947-dfb2b82b57a7
			defaultHierarchy: LocalDateTable_d24e3edf-a759-4c92-a59f-1fc8cf54a6c8.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column DateModified
		dataType: dateTime
		formatString: Mmm d "@" hh:nn
		lineageTag: 87f2e6ad-bdb5-4a09-b927-204d12997c93
		summarizeBy: none
		sourceColumn: DateModified

		variation Variation
			isDefault
			relationship: 2a8264f5-af1f-4347-89e8-a1d30e4a00af
			defaultHierarchy: LocalDateTable_9c2ef32e-1f64-425a-80cf-53a4020c55fd.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	column DateAccessed
		dataType: dateTime
		formatString: General Date
		lineageTag: 1d95f024-52dc-4555-aa6a-fbcc4f8ab88c
		summarizeBy: none
		sourceColumn: DateAccessed

		variation Variation
			isDefault
			relationship: a567475c-1f01-415b-8682-7794f5662c66
			defaultHierarchy: LocalDateTable_cc194c8b-c38e-44b7-81e4-19de95f9eb7b.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column ExportDay = Date(Year([DateModified]), Month([DateModified]), Day([DateModified]))
		dataType: dateTime
		formatString: General Date
		lineageTag: dde50a72-902f-4a3d-8da5-e7d4189d8543
		summarizeBy: none
		isDataTypeInferred

		variation Variation
			isDefault
			relationship: bf8bf86f-8993-4d16-8af3-b9d69d0cc2e9
			defaultHierarchy: LocalDateTable_767a87d5-01db-48e9-b034-577f5dc943a1.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	partition HubExports = m
		mode: import
		queryGroup: 'FinOps toolkit'
		source = ```
				let
				    ADLS = AzureStorage.DataLake(#"Storage URL" & "/../msexports"),
				    FileSize  = Table.AddColumn(ADLS, "FileSizeInGB", each 1.0 * [Attributes][Size] / 1000000000, type number),
				    Storage   = Table.AddColumn(FileSize, "StorageAccount", each Text.SplitAny([Folder Path], "/."){2}),
				    Container = Table.AddColumn(Storage, "Container", each Text.Split([Folder Path], "/"){3}),
				    MonthStr  = Table.AddColumn(Container, "MonthStr", 
				        each Text.Range((
				            if Text.Contains(List.Last(List.RemoveLastN(Text.Split(Text.Trim([Folder Path], "/"), "/"), 1)), "-") then List.Last(List.RemoveLastN(Text.Split(Text.Trim([Folder Path], "/"), "/"), 1))
				            else List.Last(List.RemoveLastN(Text.Split(Text.Trim([Folder Path], "/"), "/"), 2))
				        ), 0, 6)
				    ),
				    _toMonth = (s) => Date.FromText(Text.Range(s, 0, 4) & "-" & Text.Range(s, 4, 2) & "-01"),
				    // TODO: If we use UTC, it shows up as the previous month -- DateTime.Date(DateTime.FromText(Text.Range(s, 0, 4) & "-" & Text.Range(s, 4, 2) & "-01T00:00:00Z")),
				    Month     = Table.AddColumn(MonthStr, "Month", each if [MonthStr] <> null then _toMonth([MonthStr]) else null, type date),
				    Scope     = Table.AddColumn(Month, "Scope", each Text.Combine(List.RemoveLastN(Text.Split(Text.Split(Text.Split([Folder Path], "/" & [Container]){1}, "/" & [MonthStr]){0}, "/"), 1), "/")),
				    FileType  = Table.AddColumn(Scope, "FileType", 
				        each if [Name] = "manifest.json" then "Manifest"
				        else if [Name] = "_manifest.json" then "Manifest"
				        else if [Extension] = ".csv" then "CSV"
				        else "Unknown"
				    ),
				    Manifest = Table.AddColumn(FileType, "Manifest", 
				        each if [Name] = "manifest.json" then Json.Document([Content])
				        //else if [Name] = "_manifest.json" then Json.Document([Content]) 
				        else null
				    ),
				    ExportName  = Table.AddColumn(Manifest, "ExportName", each if [Name] = "manifest.json" then [Manifest][exportConfig][exportName] else Text.Split(List.Last(Text.Split([Folder Path], [Scope] & "/")), "/"){0}),
				    ApiVersion  = Table.AddColumn(ExportName, "ApiVersion", 
				        each if [Name] = "manifest.json" then [Manifest][exportConfig][apiVersion] 
				        // else if [Name] = "_manifest.json" then [Manifest][manifestVersion] 
				        else null
				    ),
				    //TimeFrame   = Table.AddColumn(ApiVersion, "TimeFrame", each if [Name] = "manifest.json" then [Manifest][exportConfig][timeFrame] else null),
				    //Granularity = Table.AddColumn(TimeFrame, "Granularity", each if [Name] = "manifest.json" then [Manifest][exportConfig][granularity] else null),
				    Dataset     = Table.AddColumn(ApiVersion, "Dataset", 
				        each if [Name] = "manifest.json" then Text.Lower([Manifest][exportConfig][type])
				        // else if [Name] = "_manifest.json" then "amortizedcost (assumed)"
				        else null
				    ),
				    // DataVersion   = Table.AddColumn(Dataset,      "DataVersion", each if [Name] = "manifest.json" then [Manifest][exportConfig][dataVersion] else null),
				    // Partitioning  = Table.AddColumn(DataVersion,  "Partitioning", each if [Name] = "manifest.json" then [Manifest][deliveryConfig][partitionData] else null),
				    // ExportFormat  = Table.AddColumn(Partitioning, "ExportFormat", each if [Name] = "manifest.json" then [Manifest][deliveryConfig][fileFormat] else null),
				    // ExportPath    = Table.AddColumn(ExportFormat, "ExportPath", each if [Name] = "manifest.json" then [Manifest][deliveryConfig][rootFolderPath] else null),
				    // ExportedBytes = Table.AddColumn(ExportPath,   "ExportedBytes", 
				    //     each if [Name] = "manifest.json" then List.Sum(List.Transform([Manifest][blobs], each _[byteCount]))
				    //     else if [Name] = "_manifest.json" then [Manifest][byteCount]
				    //     else null
				    // ),
				    // ExportedRows = Table.AddColumn(ExportedBytes, "ExportedRows", each if [Name] = "manifest.json" then null else if [Name] = "_manifest.json" then [Manifest][dataRowCount] else null),
				    RenameColumns  = Table.RenameColumns(Dataset,{{"Date accessed", "DateAccessed"}, {"Date modified", "DateModified"}, {"Date created", "DateCreated"}, {"Folder Path", "FolderPath"}, {"Name", "FileName"}}),
				    _columns = {"Scope", "ExportName", "Dataset", "ApiVersion", "StorageAccount", "Container", "Month", "FileType", "FileName", "FileSizeInGB", "FolderPath", "DateCreated", "DateModified", "DateAccessed"},
				    RemoveColumns  = Table.SelectColumns(RenameColumns, _columns),
				    ReorderColumns = Table.ReorderColumns(RemoveColumns, _columns)
				in
				    ReorderColumns
				```

	annotation PBI_ResultType = Table

